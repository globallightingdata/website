"use strict";(self.webpackChunkgldf=self.webpackChunkgldf||[]).push([[2816],{6951:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>d,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"structure/geometries","title":"Geometries","description":"Geometry Description","source":"@site/docs/structure/geometries.md","sourceDirName":"structure","slug":"/structure/geometries","permalink":"/docs/structure/geometries","draft":false,"unlisted":false,"editUrl":"https://github.com/globallightingdata/website/tree/master/docs/structure/geometries.md","tags":[],"version":"current","frontMatter":{"title":"Geometries","sidebar_label":"Geometries"},"sidebar":"sidebar","previous":{"title":"Emitters","permalink":"/docs/structure/emitters"},"next":{"title":"Global Product Data","permalink":"/docs/structure/product"}}');var r=t(4848),o=t(8453);const l={title:"Geometries",sidebar_label:"Geometries"},s=void 0,d={},c=[{value:"Geometry Description",id:"geometry-description",level:2},{value:"Location in XSD",id:"location-in-xsd",level:2},{value:"XSD description",id:"xsd-description",level:2},{value:"<code>SimpleGeometry</code> element",id:"simplegeometry-element",level:2},{value:"<code>SimpleGeometry</code> example",id:"simplegeometry-example",level:3},{value:"<code>ModelGeometry</code> element",id:"modelgeometry-element",level:2},{value:"<code>ModelGeometry</code> example",id:"modelgeometry-example",level:3},{value:"Level of detail",id:"level-of-detail",level:3},{value:"Referencing a geometry",id:"referencing-a-geometry",level:2}];function a(e){const i={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.h2,{id:"geometry-description",children:"Geometry Description"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"Geometries"})," is the ninth child-element of ",(0,r.jsx)(i.code,{children:"GeneralDefinitions"})," - the part in the XML where ",(0,r.jsx)(i.strong,{children:"global and reusable"})," elements are defined (imagine them as the building blocks of each luminaire). The definition of Geometries is ",(0,r.jsx)(i.strong,{children:"optional"}),"."]}),"\n",(0,r.jsx)(i.h2,{id:"location-in-xsd",children:"Location in XSD"}),"\n",(0,r.jsx)("img",{src:"/img/docs/structure/geometries-hierarchy.webp",alt:"Geometries in XSD",width:"550"}),"\n",(0,r.jsx)(i.h2,{id:"xsd-description",children:"XSD description"}),"\n",(0,r.jsx)(i.p,{children:"In GLDF, geometries for a luminaire can be defined in two ways:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["Basic geometries by using the ",(0,r.jsx)(i.code,{children:"SimpleGeometry"})," element. These are limited to ",(0,r.jsx)(i.strong,{children:"cuboid and cylinder only"}),". However, they have the advantage of being specified ",(0,r.jsx)(i.strong,{children:"directly in the GLDF XML"}),". Simple geometries should be primarily used to ",(0,r.jsx)(i.strong,{children:"overwrite the geometry definition inside the photometry"})," file, should this be required for any reason."]}),"\n",(0,r.jsxs)(i.li,{children:["Complex 3D models using the ",(0,r.jsx)(i.code,{children:"ModelGeometry"})," element. 3D models are always located in external files and referenced in the GLDF like other ",(0,r.jsx)(i.a,{href:"/docs/structure/files",children:(0,r.jsx)(i.code,{children:"Files"})})," in previous chapters."]}),"\n"]}),"\n",(0,r.jsx)("img",{src:"/img/docs/structure/geometries-xsd.webp",alt:"Geometries in XSD",width:"350"}),"\n",(0,r.jsxs)(i.p,{children:["Per GLDF multiple ",(0,r.jsx)(i.code,{children:"SimpleGeometry"})," and ",(0,r.jsx)(i.code,{children:"ModelGeometry"})," elements can be defined. However, this should not be often the case, as ",(0,r.jsx)(i.a,{href:"/docs/structure/variant",children:(0,r.jsx)(i.code,{children:"Variants"})})," which differ even in their geometry should presumably represent independent products with own GLDF files."]}),"\n",(0,r.jsxs)(i.h2,{id:"simplegeometry-element",children:[(0,r.jsx)(i.code,{children:"SimpleGeometry"})," element"]}),"\n",(0,r.jsxs)(i.p,{children:["A ",(0,r.jsx)(i.code,{children:"SimpleGeometry"})," corresponds to the descriptions known from the photometric format ",(0,r.jsx)(i.em,{children:"Eulumdat"}),". Where the luminaire can be a ",(0,r.jsx)(i.strong,{children:"rectangular box or a cylinder"})," either. The definition of a simple geometry inside GLDF allows to ",(0,r.jsx)(i.strong,{children:"override this photometry geometry"}),". At least if necessary - there is no mandatory requirement to define a simple geometry (or any geometry) for your luminaire at all."]}),"\n",(0,r.jsxs)(i.p,{children:["Beside the mandatory ",(0,r.jsx)(i.code,{children:"id"})," attribute to reference the ",(0,r.jsx)(i.code,{children:"Geometry"})," later, two additional elements (including their childs) and one optional element has to be specified for each ",(0,r.jsx)(i.code,{children:"SimpleGeometry"}),":"]}),"\n",(0,r.jsx)("img",{src:"/img/docs/structure/geometries-simple.webp",alt:"Simple Geometries in XSD",width:"835"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"The luminaire housing (3d body)"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:["Either ",(0,r.jsx)(i.code,{children:"Cuboid"})," with ",(0,r.jsx)(i.code,{children:"Width"}),", ",(0,r.jsx)(i.code,{children:"Length"})," and ",(0,r.jsx)(i.code,{children:"Height"})]}),"\n",(0,r.jsxs)(i.li,{children:["Or ",(0,r.jsx)(i.code,{children:"Cylinder"})," with ",(0,r.jsx)(i.code,{children:"Diameter"})," and ",(0,r.jsx)(i.code,{children:"Height"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"The light emitting surface (2d surface)"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:["Either rectangular shaped with its ",(0,r.jsx)(i.code,{children:"Width"})," and ",(0,r.jsx)(i.code,{children:"Length"})]}),"\n",(0,r.jsxs)(i.li,{children:["Or circular shaped with ",(0,r.jsx)(i.code,{children:"Diameter"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Optionally C-Heights of the housing"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsx)(i.li,{children:"For C0, C90, C180 and C270"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.h3,{id:"simplegeometry-example",children:[(0,r.jsx)(i.code,{children:"SimpleGeometry"})," example"]}),"\n",(0,r.jsxs)(i.p,{children:["In the following example, we create a luminaire that references a ",(0,r.jsx)(i.a,{href:"/docs/structure/emitters",children:(0,r.jsx)(i.code,{children:"ChangeableLightEmitter"})})," with an associated ",(0,r.jsx)(i.a,{href:"/docs/structure/photometries",children:(0,r.jsx)(i.code,{children:"Photometry"})}),". We also define a ",(0,r.jsx)(i.code,{children:"SimpleGeometry"})," which is to be used instead of the geometry definition inside the ",(0,r.jsx)(i.em,{children:"Eulumdat"})," photometry. This way, all photometric information comes from the .ldt photometry file. But not the geometry for visualising the casing of the luminaire:"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-xml",metastring:"showLineNumbers {13-14,17-19,22-26,29-39,58}",children:'<?xml version="1.0" encoding="UTF-8"?>\n<Root xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n      xsi:noNamespaceSchemaLocation="https://gldf.io/xsd/gldf/1.0.0-rc.3/gldf.xsd">\n  <Header>\n    <Manufacturer>ACME Lighting</Manufacturer>\n    <FormatVersion major="1" minor="0" pre-release="3" />\n    <CreatedWithApplication>Visual Studio Code</CreatedWithApplication>\n    <GldfCreationTimeCode>2023-10-25T16:30:00Z</GldfCreationTimeCode>\n    <UniqueGldfId>56a1abed-8c56-4902-8b83-616abe706f37</UniqueGldfId>\n  </Header>\n  <GeneralDefinitions>\n    <Files>\n      <File id="ldtFile" contentType="ldc/eulumdat"\n            type="localFileName">photometry.ldt</File>\n    </Files>\n    <Photometries>\n      <Photometry id="photometry">\n        <PhotometryFileReference fileId="ldtFile" />\n      </Photometry>\n    </Photometries>\n    <Emitters>\n      <Emitter id="emitter">\n        <ChangeableLightEmitter>\n          <PhotometryReference photometryId="photometry" />\n        </ChangeableLightEmitter>\n      </Emitter>\n    </Emitters>\n    <Geometries>\n      <SimpleGeometry id="geometry">\n        <Cuboid>\n          <Width>100</Width>\n          <Length>200</Length>\n          <Height>50</Height>\n        </Cuboid>\n        <RectangularEmitter>\n          <Width>50</Width>\n          <Length>100</Length>\n        </RectangularEmitter>\n      </SimpleGeometry>\n    </Geometries>\n  </GeneralDefinitions>\n  <ProductDefinitions>\n    <ProductMetaData>\n      <UniqueProductId>f06e1025-41a6-4b32-a9ad-3fa3c49ba473</UniqueProductId>\n      <ProductNumber>\n        <Locale language="en">42</Locale>\n      </ProductNumber>\n      <Name>\n        <Locale language="en">Example luminaire</Locale>\n      </Name>\n    </ProductMetaData>\n    <Variants>\n      <Variant id="variant">\n        <Name>\n          <Locale language="en">Example luminaire</Locale>\n        </Name>\n        <Geometry>\n          <SimpleGeometryReference geometryId="geometry" emitterId="emitter" />\n        </Geometry>\n      </Variant>\n    </Variants>\n  </ProductDefinitions>\n</Root>\n'})}),"\n",(0,r.jsxs)(i.p,{children:["The following image depicts, how an ",(0,r.jsx)(i.code,{children:"SimpleGeometry"})," affects visualisation."]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["On the left side, a GLDF in ",(0,r.jsx)(i.a,{href:"https://www.dialux.com",children:"DIALux"})," is rendered with a cylindric geometry from the Eulumdat file. Without any ",(0,r.jsx)(i.code,{children:"Geometries"})," definition at all."]}),"\n",(0,r.jsxs)(i.li,{children:["On the right, the same GLDF is visualized, but this time with a ",(0,r.jsx)(i.code,{children:"SimpleGeometry"})," from the XML example above. To override the cylindric ",(0,r.jsx)(i.em,{children:"Eulumdat"})," geometry with a cubic one. Although this is a constructed example, it illustrates the use case of ",(0,r.jsx)(i.code,{children:"SimpleGeometry"}),"."]}),"\n"]}),"\n",(0,r.jsx)("img",{src:"/img/docs/structure/geometries-simple-override.webp",alt:"Simple Geometries in XSD",width:"700"}),"\n",(0,r.jsxs)(i.h2,{id:"modelgeometry-element",children:[(0,r.jsx)(i.code,{children:"ModelGeometry"})," element"]}),"\n",(0,r.jsxs)(i.p,{children:["The definition of a ",(0,r.jsx)(i.code,{children:"ModelGeometry"})," consists of two steps:"]}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:["First, the corresponding 3D file must be stored in the subfolder ",(0,r.jsx)(i.em,{children:"geo"})," and made referenceable in the GLDF as ",(0,r.jsx)(i.a,{href:"/docs/structure/files",children:(0,r.jsx)(i.code,{children:"File"})})," element via its ",(0,r.jsx)(i.code,{children:"id"})," attribute."]}),"\n",(0,r.jsxs)(i.li,{children:["Second, a ",(0,r.jsx)(i.code,{children:"ModelGeometry"})," element must be created, which has only one further child element: ",(0,r.jsx)(i.code,{children:"GeometryFileReference"})," - which references the 3D geometry file from the first step. See example below."]}),"\n"]}),"\n",(0,r.jsxs)(i.admonition,{type:"tip",children:[(0,r.jsx)(i.p,{children:"How to create 3D models is described in own chapters:"}),(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:["Would you like to read more about the new L3D file format? Have a look on the ",(0,r.jsx)(i.a,{href:"/docs/geometry/l3d-intro",children:(0,r.jsx)(i.strong,{children:"L3D Introduction"})}),"."]}),"\n",(0,r.jsxs)(i.li,{children:["Would you like to start creating L3D models, check out our ",(0,r.jsx)(i.a,{href:"/docs/tools-dev/l3d-editor",children:(0,r.jsx)(i.strong,{children:"L3D Editor"})})]}),"\n"]})]}),"\n",(0,r.jsxs)(i.h3,{id:"modelgeometry-example",children:[(0,r.jsx)(i.code,{children:"ModelGeometry"})," example"]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-xml",metastring:"showLineNumbers {15-16,31-33,52-56}",children:'<?xml version="1.0" encoding="UTF-8"?>\n<Root xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n      xsi:noNamespaceSchemaLocation="https://gldf.io/xsd/gldf/1.0.0-rc.3/gldf.xsd">\n  <Header>\n    <Manufacturer>ACME Lighting</Manufacturer>\n    <FormatVersion major="1" minor="0" pre-release="3" />\n    <CreatedWithApplication>Visual Studio Code</CreatedWithApplication>\n    <GldfCreationTimeCode>2023-10-25T16:30:00Z</GldfCreationTimeCode>\n    <UniqueGldfId>56a1abed-8c56-4902-8b83-616abe706f37</UniqueGldfId>\n  </Header>\n  <GeneralDefinitions>\n    <Files>\n      <File id="ldtFile" contentType="ldc/eulumdat"\n            type="localFileName">photometry.ldt</File>\n      <File id="geometryFile" contentType="geo/l3d"\n            type="localFileName">geometry.l3d</File>\n    </Files>\n    <Photometries>\n      <Photometry id="photometry">\n        <PhotometryFileReference fileId="ldtFile" />\n      </Photometry>\n    </Photometries>\n    <Emitters>\n      <Emitter id="emitter">\n        <ChangeableLightEmitter>\n          <PhotometryReference photometryId="photometry" />\n        </ChangeableLightEmitter>\n      </Emitter>\n    </Emitters>\n    <Geometries>\n      <ModelGeometry id="geometry">\n        <GeometryFileReference fileId="geometryFile" />\n      </ModelGeometry>\n    </Geometries>\n  </GeneralDefinitions>\n  <ProductDefinitions>\n    <ProductMetaData>\n      <UniqueProductId>f06e1025-41a6-4b32-a9ad-3fa3c49ba473</UniqueProductId>\n      <ProductNumber>\n        <Locale language="en">42</Locale>\n      </ProductNumber>\n      <Name>\n        <Locale language="en">Example luminaire</Locale>\n      </Name>\n    </ProductMetaData>\n    <Variants>\n      <Variant id="variant">\n        <Name>\n          <Locale language="en">Example luminaire</Locale>\n        </Name>\n        <Geometry>\n          <ModelGeometryReference geometryId="geometry">\n            <EmitterReference emitterId="emitter">\n              <EmitterObjectExternalName>leo</EmitterObjectExternalName>\n            </EmitterReference>\n          </ModelGeometryReference>\n        </Geometry>\n      </Variant>\n    </Variants>\n  </ProductDefinitions>\n</Root>\n'})}),"\n",(0,r.jsx)(i.h3,{id:"level-of-detail",children:"Level of detail"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"GeometryFileReference"})," contains one more interesting attribute: ",(0,r.jsx)(i.code,{children:"levelOfDetail"}),". This attribute explains why the probably confusing multiplicity of 1..9 for ",(0,r.jsx)(i.code,{children:"GeometryFileReference"})," is defined. Which means that 1 to 9 elements of the ",(0,r.jsx)(i.code,{children:"GeometryFileReference"})," type can be added to each ",(0,r.jsx)(i.code,{children:"ModelGeometry"}),"."]}),"\n",(0,r.jsx)("img",{src:"/img/docs/structure/geometries-level-of-detail.webp",alt:"level of detail attribute",width:"650"}),"\n",(0,r.jsxs)(i.p,{children:["The attribute ",(0,r.jsx)(i.code,{children:"levelOfDetail"})," allows applications to choose and display the 3D models in three different level of detail. This can be useful depending on the use case. A lighting planner may need a detailed model for his customer. While in the further BIM process a simplified representation is sufficient. The possible values are:"]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.code,{children:"low"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.code,{children:"medium"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.code,{children:"high"})}),"\n"]}),"\n",(0,r.jsxs)(i.p,{children:["As GLDF supports 3 model file types (l3d, m3d, r3d). And there are three level of detail for each. You can reference up to 9 files (and thus 9 ",(0,r.jsx)(i.code,{children:"GeometryFileReference"})," elements) inside each ",(0,r.jsx)(i.code,{children:"ModelGeometry"}),"."]}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-xml",metastring:"showLineNumbers",children:'<Geometries>\n  <ModelGeometry id="geometry-With-LevelOfDetail">\n    <GeometryFileReference fileId="geometryFile-low" levelOfDetail="Low" />\n    <GeometryFileReference fileId="geometryFile-medium" levelOfDetail="Medium" />\n    <GeometryFileReference fileId="geometryFile-high" levelOfDetail="High" />\n  </ModelGeometry>\n</Geometries>\n'})}),"\n",(0,r.jsx)(i.h2,{id:"referencing-a-geometry",children:"Referencing a geometry"}),"\n",(0,r.jsxs)(i.p,{children:["Once declared, all geometries can be referenced in subsequent XML elements via their ",(0,r.jsx)(i.code,{children:"id"})," attribute ",(0,r.jsx)(i.strong,{children:"one or several"})," times. This is done in the ",(0,r.jsx)(i.a,{href:"/docs/structure/variant",children:(0,r.jsx)(i.code,{children:"Variant"})})," element and described in detail ",(0,r.jsx)(i.a,{href:"/docs/structure/variant#geometry-options",children:(0,r.jsx)(i.strong,{children:"here"})}),"."]})]})}function m(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,i,t)=>{t.d(i,{R:()=>l,x:()=>s});var n=t(6540);const r={},o=n.createContext(r);function l(e){const i=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),n.createElement(o.Provider,{value:i},e.children)}}}]);