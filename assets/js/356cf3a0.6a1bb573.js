"use strict";(self.webpackChunkgldf=self.webpackChunkgldf||[]).push([[4968],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>h});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var m=i.createContext({}),d=function(e){var t=i.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=d(e.components);return i.createElement(m.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,m=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=d(n),u=r,h=p["".concat(m,".").concat(u)]||p[u]||c[u]||a;return n?i.createElement(h,o(o({ref:t},s),{},{components:n})):i.createElement(h,o({ref:t},s))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=u;var l={};for(var m in t)hasOwnProperty.call(t,m)&&(l[m]=t[m]);l.originalType=e,l[p]="string"==typeof e?e:r,o[1]=l;for(var d=2;d<a;d++)o[d]=n[d];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6193:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var i=n(7462),r=(n(7294),n(3905));const a={title:"Geometries",sidebar_label:"Geometries"},o=void 0,l={unversionedId:"structure/geometries",id:"structure/geometries",title:"Geometries",description:"Geometry Description",source:"@site/docs/structure/geometries.md",sourceDirName:"structure",slug:"/structure/geometries",permalink:"/docs/structure/geometries",draft:!1,editUrl:"https://github.com/globallightingdata/website/tree/master/docs/structure/geometries.md",tags:[],version:"current",frontMatter:{title:"Geometries",sidebar_label:"Geometries"},sidebar:"sidebar",previous:{title:"Emitters",permalink:"/docs/structure/emitters"},next:{title:"Global Product Data",permalink:"/docs/structure/product"}},m={},d=[{value:"Geometry Description",id:"geometry-description",level:2},{value:"Location in XSD",id:"location-in-xsd",level:2},{value:"XSD description",id:"xsd-description",level:2},{value:"<code>SimpleGeometry</code> element",id:"simplegeometry-element",level:2},{value:"<code>SimpleGeometry</code> example",id:"simplegeometry-example",level:3},{value:"<code>ModelGeometry</code> element",id:"modelgeometry-element",level:2},{value:"<code>ModelGeometry</code> example",id:"modelgeometry-example",level:3},{value:"Level of detail",id:"level-of-detail",level:3},{value:"Referencing a geometry",id:"referencing-a-geometry",level:2}],s={toc:d},p="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,i.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"geometry-description"},"Geometry Description"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Geometries")," is the ninth child-element of ",(0,r.kt)("inlineCode",{parentName:"p"},"GeneralDefinitions")," - the part in the XML where ",(0,r.kt)("strong",{parentName:"p"},"global and reusable")," elements are defined (imagine them as the building blocks of each luminaire). The definition of Geometries is ",(0,r.kt)("strong",{parentName:"p"},"optional"),"."),(0,r.kt)("h2",{id:"location-in-xsd"},"Location in XSD"),(0,r.kt)("img",{src:"/img/docs/structure/geometries-hierarchy.webp",alt:"Geometries in XSD",width:"550"}),(0,r.kt)("h2",{id:"xsd-description"},"XSD description"),(0,r.kt)("p",null,"In GLDF, geometries for a luminaire can be defined in two ways:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Basic geometries by using the ",(0,r.kt)("inlineCode",{parentName:"li"},"SimpleGeometry")," element. These are limited to ",(0,r.kt)("strong",{parentName:"li"},"cuboid and cylinder only"),". However, they have the advantage of being specified ",(0,r.kt)("strong",{parentName:"li"},"directly in the GLDF XML"),". Simple geometries should be primarily used to ",(0,r.kt)("strong",{parentName:"li"},"overwrite the geometry definition inside the photometry")," file, should this be required for any reason."),(0,r.kt)("li",{parentName:"ul"},"Complex 3D models using the ",(0,r.kt)("inlineCode",{parentName:"li"},"ModelGeometry")," element. 3D models are always located in external files and referenced in the GLDF like other ",(0,r.kt)("a",{parentName:"li",href:"/docs/structure/files"},(0,r.kt)("inlineCode",{parentName:"a"},"Files"))," in previous chapters.")),(0,r.kt)("img",{src:"/img/docs/structure/geometries-xsd.webp",alt:"Geometries in XSD",width:"350"}),(0,r.kt)("p",null,"Per GLDF multiple ",(0,r.kt)("inlineCode",{parentName:"p"},"SimpleGeometry")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"ModelGeometry")," elements can be defined. However, this should not be often the case, as ",(0,r.kt)("a",{parentName:"p",href:"/docs/structure/variant"},(0,r.kt)("inlineCode",{parentName:"a"},"Variants"))," which differ even in their geometry should presumably represent independent products with own GLDF files."),(0,r.kt)("h2",{id:"simplegeometry-element"},(0,r.kt)("inlineCode",{parentName:"h2"},"SimpleGeometry")," element"),(0,r.kt)("p",null,"A ",(0,r.kt)("inlineCode",{parentName:"p"},"SimpleGeometry")," corresponds to the descriptions known from the photometric format ",(0,r.kt)("em",{parentName:"p"},"Eulumdat"),". Where the luminaire can be a ",(0,r.kt)("strong",{parentName:"p"},"rectangular box or a cylinder")," either. The definition of a simple geometry inside GLDF allows to ",(0,r.kt)("strong",{parentName:"p"},"override this photometry geometry"),". At least if necessary - there is no mandatory requirement to define a simple geometry (or any geometry) for your luminaire at all."),(0,r.kt)("p",null,"Beside the mandatory ",(0,r.kt)("inlineCode",{parentName:"p"},"id")," attribute to reference the ",(0,r.kt)("inlineCode",{parentName:"p"},"Geometry")," later, two additional elements (including their childs) and one optional element has to be specified for each ",(0,r.kt)("inlineCode",{parentName:"p"},"SimpleGeometry"),":"),(0,r.kt)("img",{src:"/img/docs/structure/geometries-simple.webp",alt:"Simple Geometries in XSD",width:"835"}),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"The luminaire housing (3d body)"),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Either ",(0,r.kt)("inlineCode",{parentName:"li"},"Cuboid")," with ",(0,r.kt)("inlineCode",{parentName:"li"},"Width"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"Length")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"Height")),(0,r.kt)("li",{parentName:"ol"},"Or ",(0,r.kt)("inlineCode",{parentName:"li"},"Cylinder")," with ",(0,r.kt)("inlineCode",{parentName:"li"},"Diameter")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"Height")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"The light emitting surface (2d surface)"),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"Either rectangular shaped with its ",(0,r.kt)("inlineCode",{parentName:"li"},"Width")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"Length")),(0,r.kt)("li",{parentName:"ol"},"Or circular shaped with ",(0,r.kt)("inlineCode",{parentName:"li"},"Diameter")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Optionally C-Heights of the housing"),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},"For C0, C90, C180 and C270")))),(0,r.kt)("h3",{id:"simplegeometry-example"},(0,r.kt)("inlineCode",{parentName:"h3"},"SimpleGeometry")," example"),(0,r.kt)("p",null,"In the following example, we create a luminaire that references a ",(0,r.kt)("a",{parentName:"p",href:"/docs/structure/emitters"},(0,r.kt)("inlineCode",{parentName:"a"},"ChangeableLightEmitter"))," with an associated ",(0,r.kt)("a",{parentName:"p",href:"/docs/structure/photometries"},(0,r.kt)("inlineCode",{parentName:"a"},"Photometry")),". We also define a ",(0,r.kt)("inlineCode",{parentName:"p"},"SimpleGeometry")," which is to be used instead of the geometry definition inside the ",(0,r.kt)("em",{parentName:"p"},"Eulumdat")," photometry. This way, all photometric information comes from the .ldt photometry file. But not the geometry for visualising the casing of the luminaire:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {13-14,17-19,22-26,29-39,58}",showLineNumbers:!0,"{13-14,17-19,22-26,29-39,58}":!0},'<?xml version="1.0" encoding="UTF-8"?>\n<Root xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n      xsi:noNamespaceSchemaLocation="https://gldf.io/xsd/gldf/1.0.0-rc.3/gldf.xsd">\n  <Header>\n    <Manufacturer>ACME Lighting</Manufacturer>\n    <FormatVersion major="1" minor="0" pre-release="3" />\n    <CreatedWithApplication>Visual Studio Code</CreatedWithApplication>\n    <GldfCreationTimeCode>2023-10-25T16:30:00Z</GldfCreationTimeCode>\n    <UniqueGldfId>56a1abed-8c56-4902-8b83-616abe706f37</UniqueGldfId>\n  </Header>\n  <GeneralDefinitions>\n    <Files>\n      <File id="ldtFile" contentType="ldc/eulumdat"\n            type="localFileName">photometry.ldt</File>\n    </Files>\n    <Photometries>\n      <Photometry id="photometry">\n        <PhotometryFileReference fileId="ldtFile" />\n      </Photometry>\n    </Photometries>\n    <Emitters>\n      <Emitter id="emitter">\n        <ChangeableLightEmitter>\n          <PhotometryReference photometryId="photometry" />\n        </ChangeableLightEmitter>\n      </Emitter>\n    </Emitters>\n    <Geometries>\n      <SimpleGeometry id="geometry">\n        <Cuboid>\n          <Width>100</Width>\n          <Length>200</Length>\n          <Height>50</Height>\n        </Cuboid>\n        <RectangularEmitter>\n          <Width>50</Width>\n          <Length>100</Length>\n        </RectangularEmitter>\n      </SimpleGeometry>\n    </Geometries>\n  </GeneralDefinitions>\n  <ProductDefinitions>\n    <ProductMetaData>\n      <UniqueProductId>f06e1025-41a6-4b32-a9ad-3fa3c49ba473</UniqueProductId>\n      <ProductNumber>\n        <Locale language="en">42</Locale>\n      </ProductNumber>\n      <Name>\n        <Locale language="en">Example luminaire</Locale>\n      </Name>\n    </ProductMetaData>\n    <Variants>\n      <Variant id="variant">\n        <Name>\n          <Locale language="en">Example luminaire</Locale>\n        </Name>\n        <Geometry>\n          <SimpleGeometryReference geometryId="geometry" emitterId="emitter" />\n        </Geometry>\n      </Variant>\n    </Variants>\n  </ProductDefinitions>\n</Root>\n')),(0,r.kt)("p",null,"The following image depicts, how an ",(0,r.kt)("inlineCode",{parentName:"p"},"SimpleGeometry")," affects visualisation."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"On the left side, a GLDF in ",(0,r.kt)("a",{parentName:"li",href:"https://www.dialux.com"},"DIALux")," is rendered with a cylindric geometry from the Eulumdat file. Without any ",(0,r.kt)("inlineCode",{parentName:"li"},"Geometries")," definition at all."),(0,r.kt)("li",{parentName:"ul"},"On the right, the same GLDF is visualized, but this time with a ",(0,r.kt)("inlineCode",{parentName:"li"},"SimpleGeometry")," from the XML example above. To override the cylindric ",(0,r.kt)("em",{parentName:"li"},"Eulumdat")," geometry with a cubic one. Although this is a constructed example, it illustrates the use case of ",(0,r.kt)("inlineCode",{parentName:"li"},"SimpleGeometry"),".")),(0,r.kt)("img",{src:"/img/docs/structure/geometries-simple-override.webp",alt:"Simple Geometries in XSD",width:"700"}),(0,r.kt)("h2",{id:"modelgeometry-element"},(0,r.kt)("inlineCode",{parentName:"h2"},"ModelGeometry")," element"),(0,r.kt)("p",null,"The definition of a ",(0,r.kt)("inlineCode",{parentName:"p"},"ModelGeometry")," consists of two steps:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"First, the corresponding 3D file must be stored in the subfolder ",(0,r.kt)("em",{parentName:"li"},"geo")," and made referenceable in the GLDF as ",(0,r.kt)("a",{parentName:"li",href:"/docs/structure/files"},(0,r.kt)("inlineCode",{parentName:"a"},"File"))," element via its ",(0,r.kt)("inlineCode",{parentName:"li"},"id")," attribute."),(0,r.kt)("li",{parentName:"ol"},"Second, a ",(0,r.kt)("inlineCode",{parentName:"li"},"ModelGeometry")," element must be created, which has only one further child element: ",(0,r.kt)("inlineCode",{parentName:"li"},"GeometryFileReference")," - which references the 3D geometry file from the first step. See example below.")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"How to create 3D models is described in own chapters:"),(0,r.kt)("ol",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ol"},"Would you like to read more about the new L3D file format? Have a look on the ",(0,r.kt)("a",{parentName:"li",href:"/docs/geometry/l3d-intro"},(0,r.kt)("strong",{parentName:"a"},"L3D Introduction")),".  "),(0,r.kt)("li",{parentName:"ol"},"Would you like to start creating L3D models, check out our ",(0,r.kt)("a",{parentName:"li",href:"/docs/tools-dev/l3d-editor"},(0,r.kt)("strong",{parentName:"a"},"L3D Editor"))))),(0,r.kt)("h3",{id:"modelgeometry-example"},(0,r.kt)("inlineCode",{parentName:"h3"},"ModelGeometry")," example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {15-16,31-33,52-56}",showLineNumbers:!0,"{15-16,31-33,52-56}":!0},'<?xml version="1.0" encoding="UTF-8"?>\n<Root xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n      xsi:noNamespaceSchemaLocation="https://gldf.io/xsd/gldf/1.0.0-rc.3/gldf.xsd">\n  <Header>\n    <Manufacturer>ACME Lighting</Manufacturer>\n    <FormatVersion major="1" minor="0" pre-release="3" />\n    <CreatedWithApplication>Visual Studio Code</CreatedWithApplication>\n    <GldfCreationTimeCode>2023-10-25T16:30:00Z</GldfCreationTimeCode>\n    <UniqueGldfId>56a1abed-8c56-4902-8b83-616abe706f37</UniqueGldfId>\n  </Header>\n  <GeneralDefinitions>\n    <Files>\n      <File id="ldtFile" contentType="ldc/eulumdat"\n            type="localFileName">photometry.ldt</File>\n      <File id="geometryFile" contentType="geo/l3d"\n            type="localFileName">geometry.l3d</File>\n    </Files>\n    <Photometries>\n      <Photometry id="photometry">\n        <PhotometryFileReference fileId="ldtFile" />\n      </Photometry>\n    </Photometries>\n    <Emitters>\n      <Emitter id="emitter">\n        <ChangeableLightEmitter>\n          <PhotometryReference photometryId="photometry" />\n        </ChangeableLightEmitter>\n      </Emitter>\n    </Emitters>\n    <Geometries>\n      <ModelGeometry id="geometry">\n        <GeometryFileReference fileId="geometryFile" />\n      </ModelGeometry>\n    </Geometries>\n  </GeneralDefinitions>\n  <ProductDefinitions>\n    <ProductMetaData>\n      <UniqueProductId>f06e1025-41a6-4b32-a9ad-3fa3c49ba473</UniqueProductId>\n      <ProductNumber>\n        <Locale language="en">42</Locale>\n      </ProductNumber>\n      <Name>\n        <Locale language="en">Example luminaire</Locale>\n      </Name>\n    </ProductMetaData>\n    <Variants>\n      <Variant id="variant">\n        <Name>\n          <Locale language="en">Example luminaire</Locale>\n        </Name>\n        <Geometry>\n          <ModelGeometryReference geometryId="geometry">\n            <EmitterReference emitterId="emitter">\n              <EmitterObjectExternalName>leo</EmitterObjectExternalName>\n            </EmitterReference>\n          </ModelGeometryReference>\n        </Geometry>\n      </Variant>\n    </Variants>\n  </ProductDefinitions>\n</Root>\n')),(0,r.kt)("h3",{id:"level-of-detail"},"Level of detail"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"GeometryFileReference")," contains one more interesting attribute: ",(0,r.kt)("inlineCode",{parentName:"p"},"levelOfDetail"),". This attribute explains why the probably confusing multiplicity of 1..9 for ",(0,r.kt)("inlineCode",{parentName:"p"},"GeometryFileReference")," is defined. Which means that 1 to 9 elements of the ",(0,r.kt)("inlineCode",{parentName:"p"},"GeometryFileReference")," type can be added to each ",(0,r.kt)("inlineCode",{parentName:"p"},"ModelGeometry"),"."),(0,r.kt)("img",{src:"/img/docs/structure/geometries-level-of-detail.webp",alt:"level of detail attribute",width:"650"}),(0,r.kt)("p",null,"The attribute ",(0,r.kt)("inlineCode",{parentName:"p"},"levelOfDetail")," allows applications to choose and display the 3D models in three different level of detail. This can be useful depending on the use case. A lighting planner may need a detailed model for his customer. While in the further BIM process a simplified representation is sufficient. The possible values are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"low")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"medium")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"high"))),(0,r.kt)("p",null,"As GLDF supports 3 model file types (l3d, m3d, r3d). And there are three level of detail for each. You can reference up to 9 files (and thus 9 ",(0,r.kt)("inlineCode",{parentName:"p"},"GeometryFileReference")," elements) inside each ",(0,r.kt)("inlineCode",{parentName:"p"},"ModelGeometry"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers",showLineNumbers:!0},'<Geometries>\n  <ModelGeometry id="geometry-With-LevelOfDetail">\n    <GeometryFileReference fileId="geometryFile-low" levelOfDetail="Low" />\n    <GeometryFileReference fileId="geometryFile-medium" levelOfDetail="Medium" />\n    <GeometryFileReference fileId="geometryFile-high" levelOfDetail="High" />\n  </ModelGeometry>\n</Geometries>\n')),(0,r.kt)("h2",{id:"referencing-a-geometry"},"Referencing a geometry"),(0,r.kt)("p",null,"Once declared, all geometries can be referenced in subsequent XML elements via their ",(0,r.kt)("inlineCode",{parentName:"p"},"id")," attribute ",(0,r.kt)("strong",{parentName:"p"},"one or several")," times. This is done in the ",(0,r.kt)("a",{parentName:"p",href:"/docs/structure/variant"},(0,r.kt)("inlineCode",{parentName:"a"},"Variant"))," element and described in detail ",(0,r.kt)("a",{parentName:"p",href:"/docs/structure/variant#geometry-options"},(0,r.kt)("strong",{parentName:"a"},"here")),"."))}c.isMDXComponent=!0}}]);