"use strict";(self.webpackChunkgldf=self.webpackChunkgldf||[]).push([[7165],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>m});var n=r(7294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,a=e.originalType,c=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=s(r),m=l,f=u["".concat(c,".").concat(m)]||u[m]||p[m]||a;return r?n.createElement(f,i(i({ref:t},d),{},{components:r})):n.createElement(f,i({ref:t},d))}));function m(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=r.length,i=new Array(a);i[0]=u;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:l,i[1]=o;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},7801:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var n=r(7462),l=(r(7294),r(3905));const a={title:"L3D Container Specification",sidebar_label:"Container Specification"},i=void 0,o={unversionedId:"geometry/l3d-container-spec",id:"geometry/l3d-container-spec",title:"L3D Container Specification",description:"General",source:"@site/docs/geometry/l3d-container-spec.md",sourceDirName:"geometry",slug:"/geometry/l3d-container-spec",permalink:"/docs/geometry/l3d-container-spec",draft:!1,editUrl:"https://github.com/globallightingdata/website/tree/master/docs/geometry/l3d-container-spec.md",tags:[],version:"current",frontMatter:{title:"L3D Container Specification",sidebar_label:"Container Specification"},sidebar:"sidebar",previous:{title:"XML Reference",permalink:"/docs/geometry/l3d-xml-reference"},next:{title:"Creating good GLDF files",permalink:"/docs/tips/good-products"}},c={},s=[{value:"General",id:"general",level:2},{value:"Root Folder Content",id:"root-folder-content",level:2},{value:"L3D-XML File",id:"l3d-xml-file",level:2},{value:"<strong>L3D-XSD</strong> Schema",id:"l3d-xsd-schema",level:2},{value:"Directories",id:"directories",level:2},{value:"Model Files",id:"model-files",level:2},{value:"Textures",id:"textures",level:2}],d={toc:s};function p(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"general"},"General"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The container files' underlying format is a standard ZIP archive."),(0,l.kt)("li",{parentName:"ul"},"The container file extension is .L3D")),(0,l.kt)("h2",{id:"root-folder-content"},"Root Folder Content"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"In the root of the container file, the following elements are expected.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"L3D-XML")," file, with the file name ",(0,l.kt)("inlineCode",{parentName:"li"},"structure.xml")," (mandatory)."),(0,l.kt)("li",{parentName:"ul"},"At least one directory with .OBJ file and the corresponding MTL/Texture files if available (mandatory).")))),(0,l.kt)("h2",{id:"l3d-xml-file"},"L3D-XML File"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Filename",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("strong",{parentName:"li"},"filename")," of the ",(0,l.kt)("strong",{parentName:"li"},"L3D-XML")," inside the root directory must be ",(0,l.kt)("inlineCode",{parentName:"li"},"structure.xml"),"."))),(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("strong",{parentName:"li"},"L3D-XML")," file is expected to be valid as follows",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Valid XML syntax."),(0,l.kt)("li",{parentName:"ul"},"Valid against the referenced l3d.xsd, see below."),(0,l.kt)("li",{parentName:"ul"},"Invalid XMLs files may not be parsed and lead to errors.")))),(0,l.kt)("h2",{id:"l3d-xsd-schema"},(0,l.kt)("strong",{parentName:"h2"},"L3D-XSD")," Schema"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"The official ",(0,l.kt)("strong",{parentName:"li"},"L3D-XSD")," Schema can always be found published at ",(0,l.kt)("a",{target:"_blank",href:r(2321).Z},"gldf.io")," or ",(0,l.kt)("a",{parentName:"li",href:"https://raw.githubusercontent.com/globallightingdata/l3d/master/xsd/l3d.xsd"},"Github"),".")),(0,l.kt)("h2",{id:"directories"},"Directories"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Each model has to be placed in a separate directory where the directory name matches the ",(0,l.kt)("inlineCode",{parentName:"li"},"id")," of the ",(0,l.kt)("a",{parentName:"li",href:"/docs/geometry/l3d-xml-reference#geometryfiledefinition"},(0,l.kt)("inlineCode",{parentName:"a"},"GeometryFileDefinition"))," which uses the model."),(0,l.kt)("li",{parentName:"ul"},"All material library and texture files have to be placed in the same directory as the corresponding model.")),(0,l.kt)("h2",{id:"model-files"},"Model Files"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Supported model files",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Version 1 of the L3D-Format only supports Wavefront .obj files, including the material files .mtl"),(0,l.kt)("li",{parentName:"ul"},"From the material file the diffuse color and diffuse texture data are supported, for now.  ")))),(0,l.kt)("admonition",{type:"caution"},(0,l.kt)("p",{parentName:"admonition"},"The .obj files must not contain more than one object per file.")),(0,l.kt)("h2",{id:"textures"},"Textures"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Supported texture formats",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"JPEG"),(0,l.kt)("li",{parentName:"ul"},"PNG")))))}p.isMDXComponent=!0},2321:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/files/l3d-c11885567a43267af4bb29a8977bdc6c.xsd"}}]);