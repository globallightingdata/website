"use strict";(self.webpackChunkgldf=self.webpackChunkgldf||[]).push([[5725],{1033:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var o=t(5893),i=t(1151);const r={title:"GLDF over Photometry",sidebar_label:"GLDF over Photometry"},s=void 0,l={id:"conventions/gldf-over-ldc",title:"GLDF over Photometry",description:"Definition",source:"@site/docs/conventions/gldf-over-ldc.md",sourceDirName:"conventions",slug:"/conventions/gldf-over-ldc",permalink:"/docs/conventions/gldf-over-ldc",draft:!1,unlisted:!1,editUrl:"https://github.com/globallightingdata/website/tree/master/docs/conventions/gldf-over-ldc.md",tags:[],version:"current",frontMatter:{title:"GLDF over Photometry",sidebar_label:"GLDF over Photometry"},sidebar:"sidebar",previous:{title:"Referencing",permalink:"/docs/conventions/referencing"},next:{title:"Variant over Global",permalink:"/docs/conventions/variant-over-global"}},a={},d=[{value:"Definition",id:"definition",level:2},{value:"Examples",id:"examples",level:2},{value:"Manufacturer Name",id:"manufacturer-name",level:3},{value:"CT &amp; CRI",id:"ct--cri",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"definition",children:"Definition"}),"\n",(0,o.jsxs)(n.p,{children:["One convention in the GLDF is: which ",(0,o.jsx)(n.strong,{children:"priority"})," applies, if the ",(0,o.jsx)(n.strong,{children:"same property"})," is present in the ",(0,o.jsx)(n.strong,{children:"photometry"})," as well as in the ",(0,o.jsx)(n.strong,{children:"GLDF"}),":"]}),"\n",(0,o.jsxs)(n.admonition,{title:"Convention",type:"important",children:[(0,o.jsx)(n.p,{children:"If a property is present"}),(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"in a linked photometry file"}),"\n",(0,o.jsx)(n.li,{children:"and in the GLDF itself"}),"\n"]}),(0,o.jsxs)(n.p,{children:["the following applies: ",(0,o.jsx)(n.strong,{children:"GLDF overwrites photometry"}),". This applies not only to properties with the same name, but to all semantically identical values."]}),(0,o.jsxs)(n.p,{children:["This convention ",(0,o.jsx)(n.strong,{children:"always prevails"})," without having to be explicitly defined."]})]}),"\n",(0,o.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,o.jsx)(n.h3,{id:"manufacturer-name",children:"Manufacturer Name"}),"\n",(0,o.jsxs)(n.p,{children:["Probably the most obvious use case that one might not even think of is the ",(0,o.jsx)(n.strong,{children:"manufacturer's name"}),". It occurs in both - photometry files like Eulumdat/IES and the GLDF - and is a mandatory field in these formats. What may seem obvious is a use case for this convention: The manufacturer name in the GLDF XML ",(0,o.jsx)(n.strong,{children:"always applies"}),". The manufacturer name in any photometry file is thus ",(0,o.jsx)(n.strong,{children:"overwritten and has no meaning"}),":"]}),"\n",(0,o.jsx)("img",{src:"/img//docs/conventions/gldf-overwrites-manufacturer.webp",alt:"GLDF Container",width:"950"}),"\n",(0,o.jsx)(n.h3,{id:"ct--cri",children:"CT & CRI"}),"\n",(0,o.jsxs)(n.p,{children:["Let's look at another example, in this case two photometric values: ",(0,o.jsx)(n.strong,{children:"color temperature"})," and the ",(0,o.jsx)(n.strong,{children:"color rendering index"}),". Lets assume that a referenced photometry file would have set these two properties as follows:"]}),"\n",(0,o.jsx)("img",{src:"/img//docs/conventions/gldf-overwrites-ldt-editor.webp",alt:"GLDF Container",width:"590"}),"\n",(0,o.jsxs)(n.p,{children:["(Image taken with ",(0,o.jsx)(n.a,{href:"https://www.dialux.com/en-GB/ldt-editor",children:"DIAL LDT Editor"}),", get it for free)"]}),"\n",(0,o.jsx)(n.p,{children:"And the following GLDF XML:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",metastring:"showLineNumbers {9-10,24-25}",children:'<?xml version="1.0" encoding="UTF-8"?>\n<Root xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n      xsi:noNamespaceSchemaLocation="https://gldf.io/xsd/gldf/1.0.0-rc.3/gldf.xsd">\n    <Header>\n        \x3c!-- Skipped for clarity --\x3e\n    </Header>\n    <GeneralDefinitions>\n        <Files>\n            <File id="photometryFile" contentType="ldc/eulumdat" \n                  type="localFileName">SomePhotometry.ldt</File>\n        </Files>\n        <Photometries>\n            <Photometry id="photometry">\n                <PhotometryFileReference fileId="photometryFile"/>\n            </Photometry>\n        </Photometries>\n        <LightSources>\n            <ChangeableLightSource id="lightSource">\n                <Name>\n                    <Locale language="en">E27 50W</Locale>\n                </Name>\n                <RatedInputPower>50</RatedInputPower>\n                <ColorInformation>\n                    <ColorRenderingIndex>90</ColorRenderingIndex>\n                    <CorrelatedColorTemperature>4200</CorrelatedColorTemperature>\n                </ColorInformation>\n                <RatedLuminousFlux>200</RatedLuminousFlux>\n            </ChangeableLightSource>\n        </LightSources>\n        \x3c!-- Skipped for clarity --\x3e\n    </GeneralDefinitions>\n    <ProductDefinitions>\n        \x3c!-- Skipped for clarity --\x3e\n    </ProductDefinitions>\n</Root>\n'})}),"\n",(0,o.jsx)(n.p,{children:"Based on the convention and the lines 24+25 in the GLDF above, the luminaire would be defined with:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"ColorRenderingIndex"})," \u279d 90"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"CorrelatedColorTemperature"})," \u279d 4200"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.strong,{children:"values from the photometry file"})," would be ",(0,o.jsx)(n.strong,{children:"overwritten"}),". On the opposite side, if lines 24+25 were ",(0,o.jsx)(n.strong,{children:"not present"})," in the GLDF XML, the values from the photometry would ",(0,o.jsx)(n.strong,{children:"keep priority"})," for this GLDF product:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"ColorRenderingIndex"})," \u279d 85"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"CorrelatedColorTemperature"})," \u279d 4000"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>s});var o=t(7294);const i={},r=o.createContext(i);function s(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);