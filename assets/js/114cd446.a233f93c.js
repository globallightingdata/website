"use strict";(self.webpackChunkgldf=self.webpackChunkgldf||[]).push([[4453],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function m(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),o=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=o(e.components);return a.createElement(d.Provider,{value:t},e.children)},s="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,p=m(e,["components","mdxType","originalType","parentName"]),s=o(n),u=r,g=s["".concat(d,".").concat(u)]||s[u]||c[u]||i;return n?a.createElement(g,l(l({ref:t},p),{},{components:n})):a.createElement(g,l({ref:t},p))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=u;var m={};for(var d in t)hasOwnProperty.call(t,d)&&(m[d]=t[d]);m.originalType=e,m[s]="string"==typeof e?e:r,l[1]=m;for(var o=2;o<i;o++)l[o]=n[o];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},757:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>m,toc:()=>o});var a=n(7462),r=(n(7294),n(3905));const i={title:"Stand Cuboid Centered",sidebar_label:"Stand Cuboid Centered"},l=void 0,m={unversionedId:"geometry/types/parametric-stand-cuboid-centered",id:"geometry/types/parametric-stand-cuboid-centered",title:"Stand Cuboid Centered",description:"Description",source:"@site/docs/geometry/types/parametric-stand-cuboid-centered.md",sourceDirName:"geometry/types",slug:"/geometry/types/parametric-stand-cuboid-centered",permalink:"/docs/geometry/types/parametric-stand-cuboid-centered",draft:!1,editUrl:"https://github.com/globallightingdata/website/tree/master/docs/geometry/types/parametric-stand-cuboid-centered.md",tags:[],version:"current",frontMatter:{title:"Stand Cuboid Centered",sidebar_label:"Stand Cuboid Centered"},sidebar:"sidebar",previous:{title:"Stand Cylinder",permalink:"/docs/geometry/types/parametric-stand-cylinder"},next:{title:"Stand Cuboid Side",permalink:"/docs/geometry/types/parametric-stand-cuboid-side"}},d={},o=[{value:"Description",id:"description",level:2},{value:"XSD",id:"xsd",level:2},{value:"XML",id:"xml",level:2}],p={toc:o},s="wrapper";function c(e){let{components:t,...i}=e;return(0,r.kt)(s,(0,a.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"description"},"Description"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Stand Cuboid Centered",src:n(3159).Z,width:"290",height:"600"})),(0,r.kt)("p",null,"A cube-shaped standing luminaire. This parametric model allows you to define the ",(0,r.kt)("inlineCode",{parentName:"p"},"TotalHeight")," and the ",(0,r.kt)("inlineCode",{parentName:"p"},"Height")," of the luminaire, not including the stand."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The stand height is the ",(0,r.kt)("inlineCode",{parentName:"li"},"TotalHeight")," minus the luminaire ",(0,r.kt)("inlineCode",{parentName:"li"},"Height"),". The stand is always in the middle of the luminaire."),(0,r.kt)("li",{parentName:"ul"},"Default length and width of the foot will be the same as the main ",(0,r.kt)("inlineCode",{parentName:"li"},"Length")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"Width"),"."),(0,r.kt)("li",{parentName:"ul"},"Default height of the foot is 2 cm. Width and length of the stand are 5 cm. Luminous dimensions must be smaller than the main dimensions."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Type")," \u279c ",(0,r.kt)("inlineCode",{parentName:"li"},"Direct"),": LEO and LES placed at the bottom center of the luminaire. All four sides grow upwards with ",(0,r.kt)("inlineCode",{parentName:"li"},"LumimousHeight"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Type")," \u279c ",(0,r.kt)("inlineCode",{parentName:"li"},"Indirect"),": LEO and LES placed at the top center of the luminaire. All four sides grow downwards with ",(0,r.kt)("inlineCode",{parentName:"li"},"LumimousHeight"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Type")," \u279c ",(0,r.kt)("inlineCode",{parentName:"li"},"DirectIndirect"),": LEO placed in the center of the luminaire. LES on top and bottom surfaces centered. ",(0,r.kt)("inlineCode",{parentName:"li"},"LuminousHeight")," > 0 means LES on all four surfaces.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Explanation"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Width"),(0,r.kt)("td",{parentName:"tr",align:"center"},"int"),(0,r.kt)("td",{parentName:"tr",align:"center"},"value in mm")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Length"),(0,r.kt)("td",{parentName:"tr",align:"center"},"int"),(0,r.kt)("td",{parentName:"tr",align:"center"},"value in mm")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Height"),(0,r.kt)("td",{parentName:"tr",align:"center"},"int"),(0,r.kt)("td",{parentName:"tr",align:"center"},"value in mm")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"LuminousWidth"),(0,r.kt)("td",{parentName:"tr",align:"center"},"int"),(0,r.kt)("td",{parentName:"tr",align:"center"},"value in mm")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"LuminousLength"),(0,r.kt)("td",{parentName:"tr",align:"center"},"int"),(0,r.kt)("td",{parentName:"tr",align:"center"},"value in mm")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"LuminousHeight"),(0,r.kt)("td",{parentName:"tr",align:"center"},"int"),(0,r.kt)("td",{parentName:"tr",align:"center"},"value in mm")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TopWidth"),(0,r.kt)("td",{parentName:"tr",align:"center"},"int"),(0,r.kt)("td",{parentName:"tr",align:"center"},"value in mm")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TopLength"),(0,r.kt)("td",{parentName:"tr",align:"center"},"int"),(0,r.kt)("td",{parentName:"tr",align:"center"},"value in mm")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"TotalHeight"),(0,r.kt)("td",{parentName:"tr",align:"center"},"int"),(0,r.kt)("td",{parentName:"tr",align:"center"},"value in mm")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Type"),(0,r.kt)("td",{parentName:"tr",align:"center"},"int"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Direct, Indirect, DirectIndirect")))),(0,r.kt)("h2",{id:"xsd"},"XSD"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<xs:element name="StandCuboidCentered">\n  <xs:complexType>\n    <xs:sequence>\n      <xs:element name="Width" type="xs:int"/>\n      <xs:element name="Length" type="xs:int"/>\n      <xs:element name="Height" type="xs:int"/>\n      <xs:element name="LuminousWidth" type="xs:int"/>\n      <xs:element name="LuminousLength" type="xs:int"/>\n      <xs:element name="TopWidth" type="xs:int" minOccurs="0"/>\n      <xs:element name="TopLength" type="xs:int" minOccurs="0"/>\n      <xs:element name="TotalHeight" type="xs:int"/>\n      <xs:element name="LuminousHeight" type="xs:int" minOccurs="0"/>\n      <xs:element name="Type" minOccurs="0">\n        <xs:simpleType>\n          <xs:restriction base="xs:string">\n            <xs:enumeration value="Direct"/>\n            <xs:enumeration value="Indirect"/>\n            <xs:enumeration value="DirectIndirect"/>\n          </xs:restriction>\n        </xs:simpleType>\n      </xs:element>\n    </xs:sequence>\n  </xs:complexType>\n</xs:element>\n')),(0,r.kt)("h2",{id:"xml"},"XML"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"<P3D>\n  <StandCuboidCentered>\n    <Width>400</Width>\n    <Length>400</Length>\n    <Height>400</Height>\n    <LuminousWidth>350</LuminousWidth>\n    <LuminousLength>350</LuminousLength>\n    <TotalHeight>1800</TotalHeight>\n  </StandCuboidCentered>\n</P3D>\n")))}c.isMDXComponent=!0},3159:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/stand-cuboid-centered-143ed77c85dce4bf4267358e9c3ca3bb.webp"}}]);