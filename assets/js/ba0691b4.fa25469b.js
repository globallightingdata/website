"use strict";(self.webpackChunkgldf=self.webpackChunkgldf||[]).push([[3244],{1060:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>a});var n=o(5893),r=o(1151);const s={title:"L3D Introduction",sidebar_label:"Introduction"},i=void 0,d={id:"geometry/l3d-intro",title:"L3D Introduction",description:"Purpose",source:"@site/docs/geometry/l3d-intro.md",sourceDirName:"geometry",slug:"/geometry/l3d-intro",permalink:"/docs/geometry/l3d-intro",draft:!1,unlisted:!1,editUrl:"https://github.com/globallightingdata/website/tree/master/docs/geometry/l3d-intro.md",tags:[],version:"current",frontMatter:{title:"L3D Introduction",sidebar_label:"Introduction"},sidebar:"sidebar",previous:{title:"Floodlight Cuboid",permalink:"/docs/geometry/types/parametric-flood-light-cuboid"},next:{title:"Examples",permalink:"/docs/geometry/l3d-examples"}},l={},a=[{value:"Purpose",id:"purpose",level:2}];function c(e){const t={a:"a",code:"code",h2:"h2",p:"p",strong:"strong",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"purpose",children:"Purpose"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"L"}),"uminaire ",(0,n.jsx)(t.strong,{children:"3D"})," (XML Format)"]}),"\n",(0,n.jsxs)(t.p,{children:["The L3D geometry format allows luminaires to be defined by ",(0,n.jsx)(t.strong,{children:"Wavefront .OBJ files"}),". The L3D is a ",(0,n.jsx)(t.strong,{children:"ZIP-compressed archive"})," that contains at least the OBJ files and a ",(0,n.jsx)(t.strong,{children:(0,n.jsx)(t.code,{children:"structure.xml"})})," file. The XML file can be used to define the OBJ models ",(0,n.jsx)(t.strong,{children:"position, rotation and other attributes"})," to form a complex model with the necessary ",(0,n.jsx)(t.strong,{children:"light emission surfaces"}),". Optionally, different components of a luminaire with ",(0,n.jsx)(t.strong,{children:"degrees of freedom"})," can be defined, e.g. to represent gimbal systems or luminaires with ",(0,n.jsx)(t.strong,{children:"movable objects"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["The easiest way to create L3D files is by using the ",(0,n.jsx)(t.strong,{children:"L3D Editor"}),", which is described in the ",(0,n.jsx)(t.a,{href:"/docs/tools-dev/l3d-editor",children:"tooling chapter"}),". The current version and published releases on the other hand can always be found in the ",(0,n.jsx)(t.a,{href:"/download",children:"Download"})," section or on ",(0,n.jsx)(t.a,{href:"https://github.com/globallightingdata/l3d",children:"Github"}),"."]})]})}function h(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},1151:(e,t,o)=>{o.d(t,{Z:()=>d,a:()=>i});var n=o(7294);const r={},s=n.createContext(r);function i(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);