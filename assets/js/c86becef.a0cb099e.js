"use strict";(self.webpackChunkgldf=self.webpackChunkgldf||[]).push([[5725],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=s(n),u=o,f=c["".concat(p,".").concat(u)]||c[u]||d[u]||a;return n?r.createElement(f,i(i({ref:t},m),{},{components:n})):r.createElement(f,i({ref:t},m))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9804:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const a={title:"GLDF over Photometry",sidebar_label:"GLDF over Photometry"},i=void 0,l={unversionedId:"conventions/gldf-over-ldc",id:"conventions/gldf-over-ldc",title:"GLDF over Photometry",description:"Definition",source:"@site/docs/conventions/gldf-over-ldc.md",sourceDirName:"conventions",slug:"/conventions/gldf-over-ldc",permalink:"/docs/conventions/gldf-over-ldc",draft:!1,editUrl:"https://github.com/globallightingdata/website/tree/master/docs/conventions/gldf-over-ldc.md",tags:[],version:"current",frontMatter:{title:"GLDF over Photometry",sidebar_label:"GLDF over Photometry"},sidebar:"sidebar",previous:{title:"Referencing",permalink:"/docs/conventions/referencing"},next:{title:"Variant over Global",permalink:"/docs/conventions/variant-over-global"}},p={},s=[{value:"Definition",id:"definition",level:2},{value:"Examples",id:"examples",level:2},{value:"Manufacturer Name",id:"manufacturer-name",level:3},{value:"CT &amp; CRI",id:"ct--cri",level:3}],m={toc:s},c="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"definition"},"Definition"),(0,o.kt)("p",null,"One convention in the GLDF is: which ",(0,o.kt)("strong",{parentName:"p"},"priority")," applies, if the ",(0,o.kt)("strong",{parentName:"p"},"same property")," is present in the ",(0,o.kt)("strong",{parentName:"p"},"photometry")," as well as in the ",(0,o.kt)("strong",{parentName:"p"},"GLDF"),":"),(0,o.kt)("admonition",{title:"Convention",type:"important"},(0,o.kt)("p",{parentName:"admonition"},"If a property is present"),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"in a linked photometry file"),(0,o.kt)("li",{parentName:"ul"},"and in the GLDF itself")),(0,o.kt)("p",{parentName:"admonition"},"the following applies: ",(0,o.kt)("strong",{parentName:"p"},"GLDF overwrites photometry"),". This applies not only to properties with the same name, but to all semantically identical values."),(0,o.kt)("p",{parentName:"admonition"},"This convention ",(0,o.kt)("strong",{parentName:"p"},"always prevails")," without having to be explicitly defined.")),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h3",{id:"manufacturer-name"},"Manufacturer Name"),(0,o.kt)("p",null,"Probably the most obvious use case that one might not even think of is the ",(0,o.kt)("strong",{parentName:"p"},"manufacturer's name"),". It occurs in both - photometry files like Eulumdat/IES and the GLDF - and is a mandatory field in these formats. What may seem obvious is a use case for this convention: The manufacturer name in the GLDF XML ",(0,o.kt)("strong",{parentName:"p"},"always applies"),". The manufacturer name in any photometry file is thus ",(0,o.kt)("strong",{parentName:"p"},"overwritten and has no meaning"),":"),(0,o.kt)("img",{src:"/img//docs/conventions/gldf-overwrites-manufacturer.webp",alt:"GLDF Container",width:"950"}),(0,o.kt)("h3",{id:"ct--cri"},"CT & CRI"),(0,o.kt)("p",null,"Let's look at another example, in this case two photometric values: ",(0,o.kt)("strong",{parentName:"p"},"color temperature")," and the ",(0,o.kt)("strong",{parentName:"p"},"color rendering index"),". Lets assume that a referenced photometry file would have set these two properties as follows:"),(0,o.kt)("img",{src:"/img//docs/conventions/gldf-overwrites-ldt-editor.webp",alt:"GLDF Container",width:"590"}),(0,o.kt)("p",null,"(Image taken with ",(0,o.kt)("a",{parentName:"p",href:"https://www.dialux.com/en-GB/ldt-editor"},"DIAL LDT Editor"),", get it for free)"),(0,o.kt)("p",null,"And the following GLDF XML:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml",metastring:"showLineNumbers {9-10,24-25}",showLineNumbers:!0,"{9-10,24-25}":!0},'<?xml version="1.0" encoding="UTF-8"?>\n<Root xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n      xsi:noNamespaceSchemaLocation="https://gldf.io/xsd/gldf/1.0.0-rc.3/gldf.xsd">\n    <Header>\n        \x3c!-- Skipped for clarity --\x3e\n    </Header>\n    <GeneralDefinitions>\n        <Files>\n            <File id="photometryFile" contentType="ldc/eulumdat" \n                  type="localFileName">SomePhotometry.ldt</File>\n        </Files>\n        <Photometries>\n            <Photometry id="photometry">\n                <PhotometryFileReference fileId="photometryFile"/>\n            </Photometry>\n        </Photometries>\n        <LightSources>\n            <ChangeableLightSource id="lightSource">\n                <Name>\n                    <Locale language="en">E27 50W</Locale>\n                </Name>\n                <RatedInputPower>50</RatedInputPower>\n                <ColorInformation>\n                    <ColorRenderingIndex>90</ColorRenderingIndex>\n                    <CorrelatedColorTemperature>4200</CorrelatedColorTemperature>\n                </ColorInformation>\n                <RatedLuminousFlux>200</RatedLuminousFlux>\n            </ChangeableLightSource>\n        </LightSources>\n        \x3c!-- Skipped for clarity --\x3e\n    </GeneralDefinitions>\n    <ProductDefinitions>\n        \x3c!-- Skipped for clarity --\x3e\n    </ProductDefinitions>\n</Root>\n')),(0,o.kt)("p",null,"Based on the convention and the lines 24+25 in the GLDF above, the luminaire would be defined with:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ColorRenderingIndex")," \u279d 90"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"CorrelatedColorTemperature")," \u279d 4200")),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"values from the photometry file")," would be ",(0,o.kt)("strong",{parentName:"p"},"overwritten"),". On the opposite side, if lines 24+25 were ",(0,o.kt)("strong",{parentName:"p"},"not present")," in the GLDF XML, the values from the photometry would ",(0,o.kt)("strong",{parentName:"p"},"keep priority")," for this GLDF product:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ColorRenderingIndex")," \u279d 85"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"CorrelatedColorTemperature")," \u279d 4000")))}d.isMDXComponent=!0}}]);