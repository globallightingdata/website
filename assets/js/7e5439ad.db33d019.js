"use strict";(self.webpackChunkgldf=self.webpackChunkgldf||[]).push([[7289],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(n),d=i,h=u["".concat(l,".").concat(d)]||u[d]||m[d]||a;return n?r.createElement(h,s(s({ref:t},p),{},{components:n})):r.createElement(h,s({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,s=new Array(a);s[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,s[1]=o;for(var c=2;c<a;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9552:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const a={title:"Spectrums",sidebar_label:"Spectrums"},s=void 0,o={unversionedId:"structure/spectrums",id:"structure/spectrums",title:"Spectrums",description:"Description",source:"@site/docs/structure/spectrums.md",sourceDirName:"structure",slug:"/structure/spectrums",permalink:"/docs/structure/spectrums",draft:!1,editUrl:"https://github.com/globallightingdata/website/tree/master/docs/structure/spectrums.md",tags:[],version:"current",frontMatter:{title:"Spectrums",sidebar_label:"Spectrums"},sidebar:"sidebar",previous:{title:"Photometries",permalink:"/docs/structure/photometries"},next:{title:"Light Sources",permalink:"/docs/structure/light-sources"}},l={},c=[{value:"Description",id:"description",level:2},{value:"Location in XSD",id:"location-in-xsd",level:2},{value:"XSD description",id:"xsd-description",level:2},{value:"1. Spectrum definition within GLDF XML",id:"1-spectrum-definition-within-gldf-xml",level:2},{value:"2. Defining the spectrum through <code>File</code> reference",id:"2-defining-the-spectrum-through-file-reference",level:2},{value:"Referencing a spectrum",id:"referencing-a-spectrum",level:2}],p={toc:c};function m(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"description"},"Description"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Spectrums")," is the fourth child-element of ",(0,i.kt)("inlineCode",{parentName:"p"},"GeneralDefinitions")," - the part in the XML where ",(0,i.kt)("strong",{parentName:"p"},"global and reusable")," elements are defined (imagine them as the building blocks of each luminaire). The definition of spectrums is ",(0,i.kt)("strong",{parentName:"p"},"optional"),"."),(0,i.kt)("p",null,"A spectrum in the GLDF can be defined in two ways"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Through a table with an assignment of intensities to wavelengths, inside the GLDF XML iteself"),(0,i.kt)("li",{parentName:"ol"},"Through a ",(0,i.kt)("inlineCode",{parentName:"li"},"File")," reference containing a well-formed spectrum definition, outside the GLDF XML")),(0,i.kt)("h2",{id:"location-in-xsd"},"Location in XSD"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Spectrums in XSD",src:n(9138).Z,width:"586",height:"897"})),(0,i.kt)("h2",{id:"xsd-description"},"XSD description"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Spectrums in XSD",src:n(2997).Z,width:"579",height:"274"})),(0,i.kt)("h2",{id:"1-spectrum-definition-within-gldf-xml"},"1. Spectrum definition within GLDF XML"),(0,i.kt)("p",null,"The first option to define a spectrum is within the GLDF XML as follows"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Spectrum inside XSD XML",src:n(6247).Z,width:"583",height:"270"})),(0,i.kt)("p",null,"Simply add a collection of ",(0,i.kt)("inlineCode",{parentName:"p"},"Intensity")," elements, in which the ",(0,i.kt)("inlineCode",{parentName:"p"},"wavelenth")," attribute determines the wavelength in nanometer. And the content of the element the intensity of the wavelength."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml",metastring:"{7-11} showLineNumbers","{7-11}":!0,showLineNumbers:!0},'<?xml version="1.0" encoding="UTF-8"?>\n<Root xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="gldf.xsd">\n  <Header/>\n  <GeneralDefinitions>\n    <Spectrums>\n      <Spectrum id="spectrum1">\n        <Intensity wavelength="380">0.03</Intensity>\n        <Intensity wavelength="385">0.08</Intensity>\n        <Intensity wavelength="390">0.12</Intensity>\n        \x3c!-- snip wavelength 395-775 --\x3e\n        <Intensity wavelength="780">0.02</Intensity>\n      </Spectrum>\n    </Spectrums>\n  </GeneralDefinitions>\n  <ProductDefinitions/>\n</Root>\n')),(0,i.kt)("h2",{id:"2-defining-the-spectrum-through-file-reference"},"2. Defining the spectrum through ",(0,i.kt)("inlineCode",{parentName:"h2"},"File")," reference"),(0,i.kt)("p",null,"A ",(0,i.kt)("inlineCode",{parentName:"p"},"Spectrum")," can also reference a ",(0,i.kt)("a",{parentName:"p",href:"/docs/structure/files"},(0,i.kt)("strong",{parentName:"a"},"File"))," element which describes the location of the spectrum content file."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml",metastring:"{6-7,11} showLineNumbers","{6-7,11}":!0,showLineNumbers:!0},'<?xml version="1.0" encoding="UTF-8"?>\n<Root xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="gldf.xsd">\n  <Header/>\n  <GeneralDefinitions>\n    <Files>\n      <File id="spectrumFile" contentType="spectrum/text" \n            type="url">https://example.org/spectrum.txt</File>\n    </Files>\n    <Spectrums>\n      <Spectrum id="spectrum1">\n        <SpectrumFileReference fileId="spectrumFile" />\n      </Spectrum>\n    </Spectrums>\n  </GeneralDefinitions>\n  <ProductDefinitions/>\n</Root>\n')),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Spectrum")," Element above ",(0,i.kt)("strong",{parentName:"p"},"references")," a spectrum File stored online, in this fictitious example at example.org/spectrum.txt. Spectrum files must conform to a ",(0,i.kt)("strong",{parentName:"p"},"specific formatting")," in order to be processed."),(0,i.kt)("p",null,"The spectrum file..."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"must be a ",(0,i.kt)("strong",{parentName:"li"},"text")," file"),(0,i.kt)("li",{parentName:"ul"},"contain the assignment of ",(0,i.kt)("strong",{parentName:"li"},"wavelengths to intensities")),(0,i.kt)("li",{parentName:"ul"},"each assignment must be written in a ",(0,i.kt)("strong",{parentName:"li"},"new line")),(0,i.kt)("li",{parentName:"ul"},"wavelengths and intensities must be ",(0,i.kt)("strong",{parentName:"li"},"separated")," by a ",(0,i.kt)("strong",{parentName:"li"},"specific character"),(0,i.kt)("admonition",{parentName:"li",type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"The character between wavelength and intensity ",(0,i.kt)("strong",{parentName:"p"},"must")," be a ",(0,i.kt)("strong",{parentName:"p"},"single whitespace")," or a ",(0,i.kt)("strong",{parentName:"p"},"single tabulator"),"!"))),(0,i.kt)("li",{parentName:"ul"},"is usually within the range of 380-780(nm), which corresponds to a textfile with 81 lines")),(0,i.kt)("p",null,"An abbreviated example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-txt"},"380  0.003720622\n385  0.003494165\n390  0.002572627\n780  0.0001542017\n")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"A ",(0,i.kt)("strong",{parentName:"p"},"complete spectrum example file")," can be downloaded here: ",(0,i.kt)("a",{href:"/other/Spectrum-Mercury-Discharge-Lamp.txt",target:"_blank"},(0,i.kt)("strong",{parentName:"p"},"Mercury-Vapor-Lamp.txt")))),(0,i.kt)("h2",{id:"referencing-a-spectrum"},"Referencing a spectrum"),(0,i.kt)("p",null,"Once declared, all spectrums can be referenced in subsequent XML elements via their ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," attribute ",(0,i.kt)("strong",{parentName:"p"},"one or several")," times."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-xml",metastring:"{9,19} showLineNumbers","{9,19}":!0,showLineNumbers:!0},'<?xml version="1.0" encoding="UTF-8"?>\n<Root xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="gldf.xsd">\n  <Header/>\n  <GeneralDefinitions>\n    <Files>\n      <File id="spectrumFile" contentType="spectrum/text" type="url">https://example.org/spectrum.txt</File>\n    </Files>\n    <Spectrums>\n      <Spectrum id="spectrum1">\n        <SpectrumFileReference fileId="spectrumFile" />\n      </Spectrum>\n    </Spectrums>\n    <LightSources>\n      <ChangeableLightSource id="lightSource1">\n        <Name>\n          <Locale language="en">Light source with spectrum</Locale>\n        </Name>\n        <RatedInputPower>10</RatedInputPower>\n        <SpectrumReference spectrumId="spectrum1" />\n        <RatedLuminousFlux>80</RatedLuminousFlux>\n      </ChangeableLightSource>\n    </LightSources>\n  </GeneralDefinitions>\n  <ProductDefinitions/>\n</Root>\n')),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Spectrum")," with ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," ",(0,i.kt)("em",{parentName:"p"},"spectrum1")," (line 9) is referenced once inside the subsequent element ",(0,i.kt)("inlineCode",{parentName:"p"},"ChangeableLightSource")," through the element ",(0,i.kt)("inlineCode",{parentName:"p"},"SpectrumReference"),". And defines the light source's ",(0,i.kt)("strong",{parentName:"p"},"spectrum")," in this way (line 19)"))}m.isMDXComponent=!0},9138:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/spectrums-hierarchy-56e4a21137d56cbdfd8ad995ed874f4a.webp"},6247:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/spectrums-inside-xsd-b895680fe67590e2ef9ab23438d33026.webp"},2997:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/spectrums-xsd-5bb2f05d30b3cba1cb9012367f4320d6.webp"}}]);