"use strict";(self.webpackChunkgldf=self.webpackChunkgldf||[]).push([[7588],{2086:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>a,toc:()=>d});var i=n(5893),o=n(1151);const l={title:"Parametric Geometry Introduction",sidebar_label:"Introduction"},r=void 0,a={id:"geometry/parametric-introduction",title:"Parametric Geometry Introduction",description:"The Concept",source:"@site/docs/geometry/parametric-introduction.md",sourceDirName:"geometry",slug:"/geometry/parametric-introduction",permalink:"/docs/geometry/parametric-introduction",draft:!1,unlisted:!1,editUrl:"https://github.com/globallightingdata/website/tree/master/docs/geometry/parametric-introduction.md",tags:[],version:"current",frontMatter:{title:"Parametric Geometry Introduction",sidebar_label:"Introduction"},sidebar:"sidebar",previous:{title:"Introduction",permalink:"/docs/geometry/introduction"},next:{title:"Features",permalink:"/docs/geometry/parametric-features"}},s={},d=[{value:"The Concept",id:"the-concept",level:2},{value:"Step-by-Step Guide",id:"step-by-step-guide",level:2},{value:"Step 1",id:"step-1",level:3},{value:"Step 2",id:"step-2",level:3},{value:"Step 3",id:"step-3",level:3},{value:"Step 4",id:"step-4",level:3}];function c(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"the-concept",children:"The Concept"}),"\n",(0,i.jsx)(t.p,{children:"Parametric Geometry is a concept that allows you to create basic, rudimentary 3D models of generic luminaires without having to model them. You can create models based on a few product dimensional parameters."}),"\n",(0,i.jsx)(t.p,{children:"Our Parametric 3D Model web service allows you to upload an input XML file and provides the download link after generating the new L3D file. You can then use the file within your GLDF file."}),"\n",(0,i.jsx)(t.h2,{id:"step-by-step-guide",children:"Step-by-Step Guide"}),"\n",(0,i.jsx)(t.p,{children:"This guide will walk you through the steps to create a sample parametric L3D model and help you understand how the web service works. The outline of the process is as follows:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Create an input XML file according to our ",(0,i.jsx)("a",{href:"/xsd/p3d/p3d.xsd",target:"_blank",children:"XSD"})," file specification."]}),"\n",(0,i.jsx)(t.li,{children:"Send the input XML file to our web service."}),"\n",(0,i.jsx)(t.li,{children:"The web service will respond with a URL where you can download the generated L3D file."}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"The following is an example based on the Windows platform. We will create a Windows batchfile (.bat) and a sample source XML file to demonstrate and test the web service."}),"\n",(0,i.jsxs)(t.admonition,{title:"Important",type:"warning",children:[(0,i.jsx)(t.p,{children:"Before you start, you will need to obtain authentication information from Relux or DIAL."}),(0,i.jsxs)(t.p,{children:["Replace then the part ",(0,i.jsx)(t.em,{children:"[REPLACE WITH CODE PROVIDED BY RELUX OR DIALUX]"})," with the provided code."]})]}),"\n",(0,i.jsx)(t.h3,{id:"step-1",children:"Step 1"}),"\n",(0,i.jsxs)(t.p,{children:["Open the windows text editor of your choice, enter the following code and save the file as ",(0,i.jsx)(t.em,{children:"example.bat"})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:'@echo off\nsetlocal\n\n:: Define the authentication credentials only once here\nset "auth=[REPLACE WITH CODE PROVIDED BY RELUX OR DIALUX]"\n\n:: Use PowerShell to show a file selection dialog\necho Showing file selection dialog...\nfor /f "delims=" %%I in (\'powershell -command "[System.Reflection.Assembly]::LoadWithPartialName(\'System.windows.forms\') | Out-Null; $OpenFileDialog = New-Object System.Windows.Forms.OpenFileDialog; $OpenFileDialog.ShowDialog() | Out-Null; $OpenFileDialog.FileName"\') do set "xmlFile=%%I"\n\n:: Check if the user canceled the file selection dialog\nif "%xmlFile%"==" " (\n    echo No file selected. Exiting...\n    exit /b 1\n)\necho Selected file: %xmlFile%\n\n:: Ensure curl is installed and available\necho Checking if curl is installed...\nwhere /q curl\nif errorlevel 1 (\n    echo curl is not installed or not in the PATH. Please install curl or add it to your PATH.\n    exit /b 1\n)\n\n:: Make the PUT request and save the output to temp file\necho Making PUT request to server...\ncurl --location --request PUT "https://p3d.relux.com/l3d/" ^\n--header "Authorization: Basic %auth%" ^\n--header "Content-Type: application/xml" ^\n--data "@%xmlFile%" > temp.xml\necho PUT request completed.\n\n:: Extract URL from XML response using PowerShell\necho Extracting URL from server response...\nfor /f "delims=" %%I in (\'powershell -command "$xml=[xml](Get-Content -Path temp.xml); $xml.root"\') do set "downloadURL=%%I"\necho Extracted URL: %downloadURL%\n\n:: Check if the URL is valid\nif not defined downloadURL (\n    echo Error: The server did not return a valid URL. Exiting...\n    exit /b 1\n)\n\n:: Extract the filename from the URL using PowerShell\necho Extracting filename from URL...\nfor /f "delims=" %%I in (\'powershell -command "$url = \'%downloadURL%\'; $url.Split(\'/\')[-1]"\') do set "fileName=%%I"\necho Extracted filename: %fileName%\n\n:: Download the file from the extracted URL and save it with the extracted filename, with authorization header\necho Downloading file from server...\ncurl --location --output "%fileName%" "%downloadURL%" ^\n--header "Authorization: Basic %auth%"\necho File download completed.\n\n:: Check if the file was successfully downloaded\nif exist "%fileName%" (\n    echo The file was successfully downloaded and saved as %fileName%.\n) else (\n    echo Error: The file could not be downloaded.\n)\n\npause\n'})}),"\n",(0,i.jsx)(t.h3,{id:"step-2",children:"Step 2"}),"\n",(0,i.jsxs)(t.p,{children:["Open another instance of your text editor, paste the following code and save the file as ",(0,i.jsx)(t.em,{children:"example.xml"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-xml",children:'<?xml version="1.0" encoding="UTF-8"?>\n<P3D>\n    <StandCuboidSide>\n     <Width>30</Width>\n     <Length>60</Length>\n     <Height>15</Height>\n     <LuminousWidth>20</LuminousWidth>\n     <LuminousLength>20</LuminousLength>\n     <TotalHeight>120</TotalHeight>\n    </StandCuboidSide>\n</P3D>\n'})}),"\n",(0,i.jsx)(t.h3,{id:"step-3",children:"Step 3"}),"\n",(0,i.jsxs)(t.p,{children:["Double-click the example.bat batchfile created in step 1. Then a file selection dialog will appear. You can then select the example.xml file created in the step above and the script will download the result L3D file to your current directory. The result filename should start with ",(0,i.jsx)(t.em,{children:"StandCuboidSide..."})," and end with ",(0,i.jsx)(t.em,{children:".l3d"}),". Your directory should look as in the image below."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Result directory",src:n(391).Z+"",width:"800",height:"407"})}),"\n",(0,i.jsx)(t.h3,{id:"step-4",children:"Step 4"}),"\n",(0,i.jsxs)(t.p,{children:["Open the ",(0,i.jsx)(t.a,{href:"https://l3d-editor.gldf.io",children:"L3D Editor"})," and load your new L3D file to see the result."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Parametric geometry in the L3D Editor",src:n(3734).Z+"",width:"800",height:"501"})})]})}function h(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},391:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/result-432a5abc626f8567aed1c0761f7ba731.webp"},3734:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/resulteditor-dc784e7e0bbbf629a9bdf29a8a543f69.webp"},1151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>r});var i=n(7294);const o={},l=i.createContext(o);function r(e){const t=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(l.Provider,{value:t},e.children)}}}]);