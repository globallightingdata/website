"use strict";(self.webpackChunkgldf=self.webpackChunkgldf||[]).push([[1214],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>g});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),d=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=d(r),g=a,m=u["".concat(s,".").concat(g)]||u[g]||c[g]||i;return r?n.createElement(m,o(o({ref:t},p),{},{components:r})):n.createElement(m,o({ref:t},p))}));function g(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var d=2;d<i;d++)o[d]=r[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},4426:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var n=r(7462),a=(r(7294),r(3905));const i={title:"L3D .NET Parser",sidebar_label:"L3D .NET Parser"},o=void 0,l={unversionedId:"tools-dev/l3d-net-parser",id:"tools-dev/l3d-net-parser",title:"L3D .NET Parser",description:"L3D .NET library",source:"@site/docs/tools-dev/l3d-net-parser.md",sourceDirName:"tools-dev",slug:"/tools-dev/l3d-net-parser",permalink:"/docs/tools-dev/l3d-net-parser",draft:!1,editUrl:"https://github.com/globallightingdata/website/tree/master/docs/tools-dev/l3d-net-parser.md",tags:[],version:"current",frontMatter:{title:"L3D .NET Parser",sidebar_label:"L3D .NET Parser"},sidebar:"sidebar",previous:{title:"GLDF .NET Parser",permalink:"/docs/tools-dev/gldf-net-parser"},next:{title:"Revit Plugin",permalink:"/docs/tools-dev/revit-plugin"}},s={},d=[{value:"L3D .NET library",id:"l3d-net-library",level:2},{value:"Introduction",id:"introduction",level:2},{value:"How to get started",id:"how-to-get-started",level:2},{value:"Requirements",id:"requirements",level:3},{value:"Nuget package",id:"nuget-package",level:3},{value:"Building a L3D container",id:"building-a-l3d-container",level:3},{value:"Reading a L3D container",id:"reading-a-l3d-container",level:3},{value:"Questions &amp; Issues",id:"questions--issues",level:2}],p={toc:d};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"l3d-net-library"},"L3D .NET library"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/globallightingdata/l3d.net"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/Github-Repository-lightgrey",alt:"Github"}))," ",(0,a.kt)("a",{parentName:"p",href:"https://www.nuget.org/packages/L3D.Net/"},(0,a.kt)("img",{parentName:"a",src:"https://img.shields.io/nuget/v/L3D.Net.svg",alt:"NuGet Status"}))," ",(0,a.kt)("a",{parentName:"p",href:"https://www.fuget.org/packages/L3D.Net"},(0,a.kt)("img",{parentName:"a",src:"https://www.fuget.org/packages/L3D.Net/badge.svg",alt:"L3D.Net on fuget.org"}))),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,".NET Standard 2.0 library for the Luminaire 3D ",(0,a.kt)("a",{parentName:"p",href:"https://gldf.io/docs/geometry/l3d-intro"},"L3D")),(0,a.kt)("p",null,"With this library it is possible to read and build L3D container files. For that the library exposes two classes ",(0,a.kt)("inlineCode",{parentName:"p"},"Builder")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"Reader"),".\nThe ",(0,a.kt)("inlineCode",{parentName:"p"},"Builder")," has a fluent API for defining all the luminaire parts and build the target container file.\nWith the ",(0,a.kt)("inlineCode",{parentName:"p"},"Reader")," is is possible to read the content of a L3D container and to parse the containing .obj files at once. So there is no other .obj parser needed."),(0,a.kt)("h2",{id:"how-to-get-started"},"How to get started"),(0,a.kt)("h3",{id:"requirements"},"Requirements"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://docs.microsoft.com/de-de/dotnet/standard/net-standard"},".NET Standard 2.0")," compatible project")),(0,a.kt)("h3",{id:"nuget-package"},"Nuget package"),(0,a.kt)("p",null,"Add the package within your IDE or using the CLI"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"dotnet add package L3D.Net\n")),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"building-a-l3d-container"},"Building a L3D container"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Builder")," example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'Builder.NewLuminaire()\n    .WithTool("Example-Tool")\n    .AddGeometry("luminairePartName", "path/to/model.obj", GeometricUnits.m, geomOptions => geomOptions\n        .AddRectangularLightEmittingObject("lightEmittingPartName", 0.5, 0.25, leoOptions => leoOptions\n            .WithLightEmittingSurfaceOnParent(3)\n        )\n    )\n    .Build("path/to/new/container.l3d");\n')),(0,a.kt)("h3",{id:"reading-a-l3d-container"},"Reading a L3D container"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Reader")," example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-csharp"},'var reader = new Reader();\nvar container = reader.ReadContainer("path/to/container.l3d");\n\nforeach (var geometryPartDto in container.Parts)\n{\n    // ...\n    var model = geometryPartDto.GeometryDefinition.Model;\n    foreach (var vertex in model.Vertices)\n    {\n        // .obj-Model vertices\n    }\n\n    // ...\n    \n    foreach (var lightEmittingPartDto in geometryPartDto.LightEmittingObjects)\n    {\n        // do something for light emitting part \n    }\n\n    // ...\n}\n')),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"questions--issues"},"Questions & Issues"),(0,a.kt)("p",null,"Please use on ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/globallightingdata/l3d.net"},"Github")," the discussion section for questions or create an issues, when something seems to be wrong."))}c.isMDXComponent=!0}}]);