"use strict";(self.webpackChunkgldf=self.webpackChunkgldf||[]).push([[5898],{9833:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>l});var t=r(9246),a=r(4848),i=r(8453);const s={title:"GLDF Release v1.0.rc2",description:"GLDF v1.0 releace candidate 2",authors:"Kurpanik",hide_table_of_contents:!1,tags:["gldf","release"]},o=void 0,d={authorsImageUrls:[void 0]},l=[{value:"Mandatory breaking changes",id:"mandatory-breaking-changes",level:2},{value:"<code>Header</code>",id:"header",level:3},{value:"<code>ProducMetaData</code>",id:"producmetadata",level:3},{value:"Possible breaking changes",id:"possible-breaking-changes",level:2},{value:"<code>SensorEmitter</code>",id:"sensoremitter",level:3},{value:"<code>ProductSeries</code>",id:"productseries",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["On the way to the final version 1.0 of the GLDF, we have published the next release candidate based on feedback. As always, the changelog can be found on Github: ",(0,a.jsx)(n.a,{href:"https://github.com/globallightingdata/gldf/releases/tag/v1.0.0-rc.2",children:"GLDF v1.0.rc2"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"Since this is still a pre-release version, we have taken the opportunity to include necessary breaking changes that we would like to avoid in the final version. Below is a short guide on how to migrate existing GLDFs from rc1 to the new rc2 version."}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.p,{children:"Some of the changes affect every GLDF. Others might require adaptation:"}),"\n",(0,a.jsx)(n.h2,{id:"mandatory-breaking-changes",children:"Mandatory breaking changes"}),"\n",(0,a.jsx)(n.h3,{id:"header",children:(0,a.jsx)(n.code,{children:"Header"})}),"\n",(0,a.jsxs)(n.p,{children:["The mandatory structure of the ",(0,a.jsx)(n.code,{children:"Header"})," element has changed as follows. To adapt a GLDF as quickly as possible, simply copy the following XML and replace the contents with your data:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",children:'<Header>\n  <Manufacturer>Manufacturer XY</Manufacturer>\n  <FormatVersion major="1" minor="0" pre-release="2"/>\n  <CreatedWithApplication>Visual Studio Code</CreatedWithApplication>\n  <GldfCreationTimeCode>2023-04-17T14:00:00Z</GldfCreationTimeCode>\n  <UniqueGldfId>INSERT UUID/GUID HERE - SHOULD ALWAYS BE UNIQUE</UniqueGldfId>\n</Header>\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Otherwise, adapt your elements and their order according to the ",(0,a.jsx)(n.a,{href:"pathname:///xsd-reference/index_Header.html",children:(0,a.jsx)(n.strong,{children:"XSD-Reference"})})]}),"\n",(0,a.jsx)(n.h3,{id:"producmetadata",children:(0,a.jsx)(n.code,{children:"ProducMetaData"})}),"\n",(0,a.jsxs)(n.p,{children:["Add to your ",(0,a.jsx)(n.code,{children:"ProductMetaData"})," an ",(0,a.jsx)(n.code,{children:"UniqueProductId"})," as first child element."]}),"\n",(0,a.jsxs)(n.p,{children:["The topic ",(0,a.jsx)(n.a,{href:"/getting-started#unique-ids",children:(0,a.jsx)(n.strong,{children:"Unique IDs"})})," describes the differences between ",(0,a.jsx)(n.code,{children:"UniqueGldfId"})," in the Header and ",(0,a.jsx)(n.code,{children:"UniqueProductId"})," inside ProducMetaData. Containig only mandatory fields, ",(0,a.jsx)(n.code,{children:"ProducMetaData"})," should now look like this:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",metastring:"showLineNumbers {2}",children:'<ProductMetaData>\n  <UniqueProductId>INSERT GUID HERE</UniqueProductId>\n  <ProductNumber>\n    <Locale language="en">LightNnumber</Locale>\n    <Locale language="de">Produktnummer</Locale>\n  </ProductNumber>\n  <Name>\n    <Locale language="en">Product name</Locale>\n    <Locale language="de">Produktname</Locale>\n  </Name>\n</ProductMetaData>\n'})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"possible-breaking-changes",children:"Possible breaking changes"}),"\n",(0,a.jsx)(n.h3,{id:"sensoremitter",children:(0,a.jsx)(n.code,{children:"SensorEmitter"})}),"\n",(0,a.jsxs)(n.p,{children:["Should you use ",(0,a.jsx)(n.code,{children:"Sensor"})," elements in your GLDF, replace references in ",(0,a.jsx)(n.code,{children:"Emitter"})," as follows"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",metastring:"showLineNumbers {13-15}",children:'<GeneralDefinitions>\n  <Files>\n    <File id="sensorFile" contentType="sensor/sensldt" \n          type="localFileName">sens.ldt</File>\n  </Files>\n  <Sensors>\n    <Sensor id="sensor">\n      <SensorFileReference fileId="sensorFile" />\n    </Sensor>\n  </Sensors>\n  <Emitters>\n    <Emitter id="sensorEmitter">\n      <SensorEmitter>\n        <SensorReference sensorId="sensor" />\n      </SensorEmitter>\n    </Emitter>\n  </Emitters>\n</GeneralDefinitions>\n'})}),"\n",(0,a.jsx)(n.h3,{id:"productseries",children:(0,a.jsx)(n.code,{children:"ProductSeries"})}),"\n",(0,a.jsxs)(n.p,{children:["Should you use ",(0,a.jsx)(n.code,{children:"ProducSeries"})," elements. Either in ",(0,a.jsx)(n.code,{children:"ProductMetaData"})," or ",(0,a.jsx)(n.code,{children:"Variants"}),", add an unique ",(0,a.jsx)(n.code,{children:"id"})," attribute to them"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",metastring:"showLineNumbers {4}",children:'<ProductDefinitions>\n  <ProductMetaData>\n    \x3c!-- Content skipped --\x3e\n    <ProductSerie id="Add-Unique-ID-Here">\n      <Name>\n        <Locale language="en">Produkt family</Locale>\n      </Name>\n    </ProductSerie>\n  </ProductMetaData>\n</ProductDefinitions>\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>o});var t=r(6540);const a={},i=t.createContext(a);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(i.Provider,{value:n},e.children)}},9246:e=>{e.exports=JSON.parse('{"permalink":"/blog/2023/04/17/release-gldf-rc2","editUrl":"https://github.com/globallightingdata/website/tree/master/blog/2023-04-17-release-gldf-rc2.md","source":"@site/blog/2023-04-17-release-gldf-rc2.md","title":"GLDF Release v1.0.rc2","description":"GLDF v1.0 releace candidate 2","date":"2023-04-17T00:00:00.000Z","tags":[{"inline":true,"label":"gldf","permalink":"/blog/tags/gldf"},{"inline":true,"label":"release","permalink":"/blog/tags/release"}],"readingTime":1.55,"hasTruncateMarker":true,"authors":[{"name":"Alex Kurpanik","title":"Developer DIAL GmbH","url":"https://github.com/Kurpanik","socials":{"github":"https://github.com/kurpanik","linkedin":"https://www.linkedin.com/in/alexander-kurpanik-399b23322/","DIAL GmbH":"https://www.dial.de"},"imageURL":"https://avatars.githubusercontent.com/u/71767601?s=460","key":"Kurpanik","page":null}],"frontMatter":{"title":"GLDF Release v1.0.rc2","description":"GLDF v1.0 releace candidate 2","authors":"Kurpanik","hide_table_of_contents":false,"tags":["gldf","release"]},"unlisted":false,"prevItem":{"title":"GLDF Release v1.0.rc3","permalink":"/blog/2023/06/23/release-gldf-rc3"},"nextItem":{"title":"L3D Editor 1.0 - Final Release","permalink":"/blog/2023/03/09/release-l3d-editor"}}')}}]);